#!/bin/bash

_bluetoothctl() {
    LC_ALL=C timeout 30 bluetoothctl
}

mode=connect

# Name -> MAC
declare -A DEVICES
finalArgs=()
format=0
while read -r _ mac name; do
    DEVICES["$name"]=$mac
    if [ ${#name} > $format ]; then
        format=$((${#name}+4))
    fi
done < <(echo "devices" | _bluetoothctl | awk '$1 == "Device"')
notify() {
    local msg
    local is_error

    msg=${1?BUG: no message}
    is_error=${2:-0}

    if command -v notify-send >/dev/null 2>&1; then
        notify-send "btmenu" "$msg"  # TODO: escaping
    fi

    if (( is_error )); then
        printf 'ERROR: %s\n' "$msg" >&2
    else
        printf '%s\n' "$msg"
    fi
}

execute_mode() {
    local mode
    local name
    local mac
    local preposition
    local expected_to_connect
    local retries

    mode=${1?BUG: missing mode}
    retries=15

    case $mode in
        connect)
            preposition=to
            expected_to_connect=yes
        ;;
        disconnect)
            preposition=from
            expected_to_connect=no
        ;;
    esac

    if ! ((${#DEVICES[@]} )); then
        notify "No devices found. Are they registered with D-Bus?" 1
        return 2
    fi
    local inc=0
    local prov
    finalArgs=("${!DEVICES[@]}") 
    while (( ${#finalArgs[@]} > $inc)); do
        prov=${finalArgs[$inc]}
        finalArgs[$inc]="    "$prov
        while (( ${#finalArgs[$inc]} <= $format )); do
            finalArgs[$inc]+=" "
        done
        finalArgs[$inc]+="|"${DEVICES[$prov]}"|"
        inc=$((inc+1))
    done
    finalArgs[inc++]=" "
    finalArgs[inc++]=$(echo show | _bluetoothctl | grep -m 1 "Powered:" | cut -c2- | sed -e "s/Powered/Power/")
    finalArgs[inc++]=$(echo show | _bluetoothctl | grep -m 1 "Discoverable:"| cut -c2-)
    finalArgs[inc++]=$(echo show | _bluetoothctl | awk "/Pairable:/{i++}i==2{print; exit}"| cut -c2-)
    name=$(printf '%s\n' "${finalArgs[@]}" | dmenu -l ${#finalArgs[@]} -p "btmenu")
    [[ $name ]] || return
    mac=${name:format+2:-1}
    if [[ ${name:1:1} != " " ]]; then
        #avoiding a if here
        #echo $name
        #echo $name
        mac=$(echo "$name" | sed -e "s/: yes/ off/")
        mac=$(echo "$name" | sed -e "s/: no/ on/")
        echo ${mac,,} | _bluetoothctl
        #mac=$(printf '%s\n' ${mac,,} | _bluetoothctl)
        #notify "Attempting to change ${name:format+1:-5}"
        exit 
    else
        notify "Attempting to $mode $preposition $mac"
        while (( retries-- )); do
            printf 'power on\n%s %s\n' "$mode" "$mac" | _bluetoothctl
            if printf 'info %s\n' "$mac" |
                _bluetoothctl |
                grep -Pq '^[\t ]+Connected: '"$expected_to_connect"; then
                notify "${mode^}ed $preposition $name"
                return 0
            fi
            sleep 1
        done

        ret="$?"
        notify "Failed to $mode $preposition $name" 1
        return "$ret"
    fi

}

i=2

for arg do
    if [[ $arg == :: ]]; then
        dmenu_args=( "${@:$i}" )
        break
    fi

    case "$arg" in
        -d) mode=disconnect ;;
    esac

    (( i++ ))
done

execute_mode "$mode"
